namespace parsers {
namespace json {

#include "json_lexer.h"

namespace {

const short kCharClass[] = {
  1, 1, 1, 1, 1, 1, 1, 1, 1, 22, 22, 1, 1, 22, 1, 1,
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  22, 1, 8, 1, 1, 1, 1, 1, 1, 1, 1, 28, 7, 11, 13, 23,
  12, 26, 26, 26, 26, 26, 26, 26, 26, 26, 6, 1, 1, 1, 1, 1,
  1, 24, 24, 24, 24, 27, 24, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 9, 5, 1, 1,
  1, 20, 25, 24, 24, 18, 19, 1, 1, 1, 1, 1, 15, 1, 14, 1,
  1, 1, 17, 21, 16, 10, 1, 1, 1, 1, 1, 2, 1, 3
};

const short kStateMap[] = {
  0
};

const short kRuleSymbol[] = {
  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
};

const int kClassCount = 29;

const short kAction[] = {
  -2, -1, 35, 34, 33, 32, 31, 30, 23, -1, -1, 22, 21, -1, 17, -1,
  13, -1, -1, 8, -1, -1, 7, -1, -1, -1, 1, -1, -1, -11, -11, -11,
  -11, -11, -11, -11, -11, -11, -11, -11, -11, 1, 5, -11, -11, -11, -11, 2,
  -11, -11, -11, -11, -11, -11, -11, 1, 2, -11, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, 3, -1, 4, -11, -11, -11, -11, -11, -11, -11, -11, -11,
  -11, -11, -11, 3, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11,
  -11, 3, -11, -11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1, -11, -11,
  -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, 6, -11, -11, -11, -11, -11,
  2, -11, -11, -11, -11, -11, -11, -11, 6, 2, -11, -9, -9, -9, -9, -9,
  -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9, -9,
  -9, 7, -9, -9, -9, -9, -9, -9, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -14, -14, -14, -14,
  -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14,
  -14, -14, -14, -14, -14, -14, -14, -14, -14, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13,
  -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12,
  -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12,
  -12, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, 5, -11,
  -11, -11, -11, 2, -11, -11, -11, -11, -11, -11, -11, -11, 2, -11, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 23, 23, 23, 23,
  23, 23, 23, 29, 24, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
  23, 23, 23, 23, 23, 23, 23, 23, -1, -1, -1, -1, -1, -1, -1, -1,
  23, 23, 25, -1, -1, -1, 23, -1, 23, 23, -1, 23, -1, -1, -1, 23,
  -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
  -1, 26, -1, -1, -1, -1, -1, 26, 26, 26, -1, -1, -1, 26, 26, 26,
  26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1,
  -1, -1, -1, -1, 27, 27, 27, -1, -1, -1, 27, 27, 27, 27, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1,
  -1, 28, 28, 28, -1, -1, -1, 28, 28, 28, 28, -1, -1, -1, -1, -1,
  -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, 23, 23,
  23, -1, -1, -1, 23, 23, 23, 23, -1, -10, -10, -10, -10, -10, -10, -10,
  -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,
  -10, -10, -10, -10, -10, -10, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8,
  -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8, -8,
  -8, -8, -8, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7,
  -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7,
  -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6,
  -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -6, -5, -5, -5,
  -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,
  -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -4, -4, -4, -4, -4,
  -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4,
  -4, -4, -4, -4, -4, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3,
  -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,
  -3, -3, -3, -3
};

}  // namespace

JsonLexer::JsonLexer(const string* input)
  : input_(input) {}

}  // namespace json
}  // namespace parsers
